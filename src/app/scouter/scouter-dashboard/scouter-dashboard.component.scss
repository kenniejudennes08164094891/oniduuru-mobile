/* scouter-dashboard.component.scss */
.dark-card-background {
  background-image: url("/assets/images/dark-card-background.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  position: relative;
}

/* ensure the parent has a predictable stacking context */
.paid-dark-card-background {
  background-image: url("/assets/images/PainDashboardBG.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  position: relative;
  // overflow: visible; /* allow children to overflow if needed */
}

/* the dark overlay */
.paid-dark-card-background::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 1; /* overlay sits above the background but below children */
  pointer-events: none; /* overlay shouldn't block clicks on children */
}

/* make all direct children render above the overlay */
.paid-dark-card-background > * {
  position: relative;
  z-index: 2; /* children (including your ion-button) will sit above overlay */
}

.circle-chart {
  position: relative;
}
.circle-chart div {
  transition: all 0.4s ease-in-out;
}

.hidden {
  transform: translateY(-100%);
}

// Add these styles to your scouter-dashboard.component.scss file
app-scouter-header {
  position: sticky;
  top: 0;
  transition: transform 0.3s ease-in-out;
  z-index: 10;
}

.header-hidden {
  transform: translateY(-100%);
}

.header-visible {
  transform: translateY(0);
}

// Add these styles to your component's SCSS file
.border-4 {
  border-width: 4px;
}

.border-solid {
  border-style: solid;
}

// Ensure proper layering of circles
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

// Style adjustments for the percentage breakdown
.bg-gray-50 {
  background-color: #f9fafb;
}

.rounded-lg {
  border-radius: 0.5rem;
}
